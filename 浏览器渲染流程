想了解浏览器渲染原理已经很久了，也没有精力来深入研究，最近为了准备面试，在自己的简历里面看到了这句话，看似不经意的一个技能，要是被问到了
答不上来那就惨了，所以吓得赶紧去查了一下资料，最终总结了下面几点，初步弄清楚了浏览器的大致运行流程。以及如何将页面渲染出来的。

下面就是浏览器执行的一些步骤。
1.javascript

  主要实现动画和一些交互的效果，dom元素的操作
  
2.style（计算样式）
  
  确定每一个dom元素应该用什么css规则来约束
 
3.layout（布局）

    计算每一个dom元素在窗口中显示的大小和位置，由于页面布局的相对化，其中一个元素的移动会对其他元素的位置引发变化。
    
4. paint （绘制）

    在多个层上绘制dom元素的文字，颜色，以及一些其他的属性
    
5. composite（渲染层合并）

    按照合理的顺序合并图层，并显示在窗口中
    
  
plus：在一般的性能优化中，要注意减少不必要的渲染环节，可以去掉layout和paint

如何优化每一个步骤呢：

  (1).优化JavaScript的执行效率
  
      .把耗时长的JavaScript代码放到Web Workers中去做
      
  (2).降低样式计算的范围和复杂度
  
      .降低样式选择器的复杂度
      .尽量保持class的简短，或者使用Web Components框架
      .减少需要执行样式计算的元素个数
      
  (3).避免大规模、复杂的布局
  
      .尽可能避免触发布局
      .使用flexbox替代老的布局模型
      .避免强制同步布局事件的发生
      .避免连续的强制同步布局发生
      
  (4).简化绘制的复杂度、减少绘制区域
  
      .提升移动或渐变元素的绘制层
      .减少绘制区域
      .简化绘制的复杂度
      
  (5).优先使用渲染层合并属性、控制层数量
  (6).对用户输入事件的处理函数去抖动（移动设备）
  
      减少函数的等待周期，根据不同的设备使用不同的函数。提高性能。
  
